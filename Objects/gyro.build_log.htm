<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: É Vision V5.39.0.0
Copyright (C) 2023 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Shunsuke Yamamoto
Individual
User-based license: Keil MDK Community
Valid until: Jun 1 2033. Cached until: Mar 17 2024
 
Tool Versions:
Toolchain:       Keil MDK Community  Version: 5.39.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.21
Assembler:       Armasm.exe V6.21
Linker/Locator:  ArmLink.exe V6.21
Library Manager: ArmAr.exe V6.21
Hex Converter:   FromElf.exe V6.21
CPU DLL:         SARMCM3.DLL V5.39.0.0
Dialog DLL:      DCM.DLL V1.17.5.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.2.0.0
Dialog DLL:      TCM.DLL V1.56.4.0
 
<h2>Project:</h2>
C:\Users\yamas\Documents\uvision\gyro\gyro.uvprojx
Project File Date:  03/10/2024

<h2>Output:</h2>
*** Using Compiler 'V6.21', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Build target 'Target 1'
src/main.c(3): warning: In file included from...
C:/Users/yamas/AppData/Local/arm/packs/Keil/STM32L4xx_DFP/2.6.2/Drivers/CMSIS/Device/ST/STM32L4xx/Include\stm32l476xx.h(10): warning: invalid UTF-8 in comment [-Winvalid-utf8]
   10 |   *           - Macros to access peripheral<92>s registers hardware
      |                                            ^
src/main.c(10): warning: no previous prototype for function 'led_init' [-Wmissing-prototypes]
   10 | void led_init(void) {
      |      ^
src/main.c(10): note: declare 'static' if the function is not intended to be used outside of this translation unit
   10 | void led_init(void) {
      | ^
      | static 
src/main.c(16): warning: no previous prototype for function 'led_on' [-Wmissing-prototypes]
   16 | void led_on(void) { GPIOE->BSRR = GPIO_BSRR_BS8; }
      |      ^
src/main.c(16): note: declare 'static' if the function is not intended to be used outside of this translation unit
   16 | void led_on(void) { GPIOE->BSRR = GPIO_BSRR_BS8; }
      | ^
      | static 
src/main.c(18): warning: no previous prototype for function 'led_off' [-Wmissing-prototypes]
   18 | void led_off(void) { GPIOE->BSRR = GPIO_BSRR_BR8; }
      |      ^
src/main.c(18): note: declare 'static' if the function is not intended to be used outside of this translation unit
   18 | void led_off(void) { GPIOE->BSRR = GPIO_BSRR_BR8; }
      | ^
      | static 
src/main.c(20): warning: no previous prototype for function 'spi2_init' [-Wmissing-prototypes]
   20 | void spi2_init(void) {
      |      ^
src/main.c(20): note: declare 'static' if the function is not intended to be used outside of this translation unit
   20 | void spi2_init(void) {
      | ^
      | static 
src/main.c(58): warning: implicit conversion loses integer precision: 'volatile uint32_t' (aka 'volatile unsigned int') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
   58 |     dummy_data = SPI2->DR;
      |                ~ ~~~~~~^~
src/main.c(40): warning: variable 'dummy_data' set but not used [-Wunused-but-set-variable]
   40 |   uint8_t data, dummy_data;
      |                 ^
src/main.c(39): warning: no previous prototype for function 'spi2_read8bit' [-Wmissing-prototypes]
   39 | uint8_t spi2_read8bit(uint8_t addr) {
      |         ^
src/main.c(39): note: declare 'static' if the function is not intended to be used outside of this translation unit
   39 | uint8_t spi2_read8bit(uint8_t addr) {
      | ^
      | static 
src/main.c(74): warning: implicit conversion loses integer precision: 'int' to 'uint16_t' (aka 'unsigned short') [-Wimplicit-int-conversion]
   74 |   uint16_t send_data = (SPI_READ_CMD | SPI_INC_CMD | addr) << 8;
      |            ~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
src/main.c(78): warning: implicit conversion changes signedness: 'uint32_t' (aka 'unsigned int') to 'int16_t' (aka 'short') [-Wsign-conversion]
   78 |   data = SPI2->DR & 0xffff;
      |        ~ ~~~~~~~~~^~~~~~~~
src/main.c(74): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
   74 |   uint16_t send_data = (SPI_READ_CMD | SPI_INC_CMD | addr) << 8;
      |            ^
src/main.c(65): warning: no previous prototype for function 'spi2_read16bit' [-Wmissing-prototypes]
   65 | int16_t spi2_read16bit(uint8_t addr) {
      |         ^
src/main.c(65): note: declare 'static' if the function is not intended to be used outside of this translation unit
   65 | int16_t spi2_read16bit(uint8_t addr) {
      | ^
      | static 
src/main.c(97): warning: implicit conversion changes signedness: 'int' to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
   97 |   SPI2->DR = (addr << 8) | dat;
      |            ~ ~~~~~~~~~~~~^~~~~
src/main.c(104): warning: implicit conversion loses integer precision: 'volatile uint32_t' (aka 'volatile unsigned int') to 'uint16_t' (aka 'unsigned short') [-Wimplicit-int-conversion]
  104 |   dummy_dat = SPI2->DR;
      |             ~ ~~~~~~^~
src/main.c(89): warning: variable 'dummy_dat' set but not used [-Wunused-but-set-variable]
   89 |   uint16_t dummy_dat;
      |            ^
src/main.c(88): warning: no previous prototype for function 'spi2_write8bit' [-Wmissing-prototypes]
   88 | void spi2_write8bit(uint8_t addr, uint8_t dat) {
      |      ^
src/main.c(88): note: declare 'static' if the function is not intended to be used outside of this translation unit
   88 | void spi2_write8bit(uint8_t addr, uint8_t dat) {
      | ^
      | static 
src/main.c(124): warning: implicit conversion loses integer precision: 'int' to 'int16_t' (aka 'short') [-Wimplicit-int-conversion]
  124 |   val_x_int = (val_x_h << 8) | val_x_l;
      |             ~ ~~~~~~~~~~~~~~~^~~~~~~~~
src/main.c(125): warning: implicit conversion loses integer precision: 'int' to 'int16_t' (aka 'short') [-Wimplicit-int-conversion]
  125 |   val_y_int = (val_y_h << 8) | val_y_l;
      |             ~ ~~~~~~~~~~~~~~~^~~~~~~~~
src/main.c(126): warning: implicit conversion loses integer precision: 'int' to 'int16_t' (aka 'short') [-Wimplicit-int-conversion]
  126 |   val_z_int = (val_z_h << 8) | val_z_l;
      |             ~ ~~~~~~~~~~~~~~~^~~~~~~~~
src/main.c(115): warning: no previous prototype for function 'gyro_read' [-Wmissing-prototypes]
  115 | void gyro_read(GyroData *gyro_data) {
      |      ^
src/main.c(115): note: declare 'static' if the function is not intended to be used outside of this translation unit
  115 | void gyro_read(GyroData *gyro_data) {
      | ^
      | static 
src/main.c(132): warning: no previous prototype for function 'usart2_init' [-Wmissing-prototypes]
  132 | void usart2_init(void) {
      |      ^
src/main.c(132): note: declare 'static' if the function is not intended to be used outside of this translation unit
  132 | void usart2_init(void) {
      | ^
      | static 
src/main.c(144): warning: no previous prototype for function 'usart_dma_init' [-Wmissing-prototypes]
  144 | void usart_dma_init(void) {
      |      ^
src/main.c(144): note: declare 'static' if the function is not intended to be used outside of this translation unit
  144 | void usart_dma_init(void) {
      | ^
      | static 
src/main.c(167): warning: passing 'uint8_t[256]' (aka 'unsigned char[256]') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  167 |     sprintf(txdata, "%0f, %0f, %0f\r\n", gyro_data.val_x, gyro_data.val_y,
      |             ^~~~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(417): note: passing argument to parameter here
  417 | extern _ARMABI int sprintf(char * __restrict /*s*/, const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
      |                                                   ^
src/main.c(168): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
  167 |     sprintf(txdata, "%0f, %0f, %0f\r\n", gyro_data.val_x, gyro_data.val_y,
      |     ~~~~~~~
  168 |             gyro_data.val_z);
      |             ~~~~~~~~~~^~~~~
src/main.c(167): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
  167 |     sprintf(txdata, "%0f, %0f, %0f\r\n", gyro_data.val_x, gyro_data.val_y,
      |     ~~~~~~~                                               ~~~~~~~~~~^~~~~
src/main.c(167): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
  167 |     sprintf(txdata, "%0f, %0f, %0f\r\n", gyro_data.val_x, gyro_data.val_y,
      |     ~~~~~~~                              ~~~~~~~~~~^~~~~
src/main.c(177): warning: no newline at end of file [-Wnewline-eof]
  177 | }
      |  ^
src/main.c(176): warning: 'return' will never be executed [-Wunreachable-code-return]
  176 |   return 0;
      |          ^
src/main.c(8): warning: no previous extern declaration for non-static variable 'txdata' [-Wmissing-variable-declarations]
    8 | uint8_t txdata[256];
      |         ^
src/main.c(8): note: declare 'static' if the variable is not intended to be used outside of this translation unit
    8 | uint8_t txdata[256];
      | ^
src/main.c(154): warning: no previous extern declaration for non-static variable 'gyro_data' [-Wmissing-variable-declarations]
  154 | GyroData gyro_data;
      |          ^
src/main.c(154): note: declare 'static' if the variable is not intended to be used outside of this translation unit
  154 | GyroData gyro_data;
      | ^
src/main.c(155): warning: no previous extern declaration for non-static variable 'rxdata' [-Wmissing-variable-declarations]
  155 | uint8_t rxdata;
      |         ^
src/main.c(155): note: declare 'static' if the variable is not intended to be used outside of this translation unit
  155 | uint8_t rxdata;
      | ^
31 warnings generated.
compiling main.c...
linking...
Program Size: Code=8684 RO-data=992 RW-data=4 ZI-data=1908  
".\Objects\gyro.axf" - 0 Error(s), 31 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                https://www.keil.com/pack/ARM.CMSIS.6.0.0.pack
                ARM::CMSIS@6.0.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 6.0.0

Package Vendor: Keil
                https://www.keil.com/pack/Keil.STM32L4xx_DFP.2.6.2.pack
                Keil::STM32L4xx_DFP@2.6.2
                STMicroelectronics STM32L4 Series Device Support, Drivers and Examples
   * Component: Startup Version: 1.3.1

<h2>Collection of Component include folders:</h2>
  ./RTE/_Target_1
  C:/Users/yamas/AppData/Local/arm/packs/ARM/CMSIS/6.0.0/CMSIS/Core/Include
  C:/Users/yamas/AppData/Local/arm/packs/Keil/STM32L4xx_DFP/2.6.2/Drivers/CMSIS/Device/ST/STM32L4xx/Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE@6.0.0

   * Component: Keil::Device:Startup@1.3.1
      Source file:   Drivers/CMSIS/Device/ST/STM32L4xx/Source/Templates/arm/startup_stm32l476xx.s
      Source file:   MDK/Device/Source/ARM/STM32L4xx_DB_OPT.s
      Include file:  Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h
      Source file:   Drivers/CMSIS/Device/ST/STM32L4xx/Source/Templates/system_stm32l4xx.c
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
